package com.wby.thread.manythread.Chaptor11持有对象.node0序文;

/**
 * @Auther: LangWeiXian
 * @Date: 2021/6/30 11:06
 * @Description:
 *  如果一个程序只包含固定数量的和已知生命周期的对象，那么这是一个简单程序。
 *  通常，程序总是根据运行时才知道的某些条件去创建新对象。在此之前，不会知道所需对象的数量，甚至不知道确切的类型。
 *  要解决这个问题，需要在任意时刻任意位置创建任意数量的对象。所以不能依靠创建命名的引用来持有每一个对象：MyType aReference 因为你不知道实际上会需要多少这样的引用。
 *
 *  大多数语言都提供某种方法来解决这个问题，java有多种保存对象的方式（应该说对象的引用）。例如之前的数组，他是编译器支持的类型。
 *  数组是保存一组对象最有效的方式，如果你想保存一组基本类型数据，也推荐使用这种方式。但是数组是固定长度的，因此就很受限。
 *
 *  java类库中提供了一套容器来解决这个问题,其中基本类型是List、Set、Queue、Map，这些对象也称为集合类，但是由于Java的类库中使用了Collection这个名字来指代该类库的一个特殊子集，
 *  所以我们使用“容器”来称呼他们。
 *  容器 还有一些其他的特性。
 *      例如Set对于每个值只保存一个对象，
 *      Map是允许你将某些对象与其他对象关联起来的 关联数组 。
 *      java容器类都可以自己调整大小，与数组不同，所以你可以不比关心容器该设置为多大。
 *
 *  即使java中没有直接的关键字支持（python，perl，ruby中都有容器的本地支持）
 */
public class Text {
}
