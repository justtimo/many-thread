package com.wby.thread.manythread.character20注解.node6总结;

/**
 * 注解是Java引入的一项非常受欢迎的补充。它提供了一种结构化的，并且具有类型检查能力的新途径，从而使得程序员能够为代码加入元数据，而不会导致代码杂乱且难以阅读。
 * 使用注解能够帮助我们避免编写累赘的部署描述文件，以及其他生成的文件。而Javadoc中的@deprecated被@Deprecated注解取代的事实也说明，与注释性文字相比，注解绝对更适合用于描述类相关的信息。
 *
 * Java SE5仅提供了很少的内置注解。这意味着如果你在别处找不到可用的类库，那就只能自已，创建新的注解以及相应的处理器。有了apt工具的帮助，程序员可以同时编译新产生的源文件，以及简化构建过程，
 * 不过就目前的情况看，mirror API只能给予你一些基本功能，帮助你找到 Java类定义中的元素。正如你已经看到的，Javassist能够用来操作字节码，或者你也可以编写自己的字节码操作工具。
 *
 * 这个状况将来一定会改善，API提供方，以及各种framework一定会将注解包含在其提供的工具集内。通过@Unit系统，我们可以想像得到，注解很可能将引发Java编程体验的巨大改变。
 * 所选习题的答案都可以在名为The Thinking in Java Annotated Solution Guide的电子文档中找到，读者可以从www.MindView.net购买此文档。
 */
public class Text {
}
