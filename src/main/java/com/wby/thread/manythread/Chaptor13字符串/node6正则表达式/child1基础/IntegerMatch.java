package com.wby.thread.manythread.Chaptor13字符串.node6正则表达式.child1基础;//: strings/IntegerMatch.java

/**
 * @Description:
 *  例如，要找一个数字，他可能有一个负号在最前面，那么你可以就写一个负号加上一个问号，就像：
 *  -?
 *
 *  使用正则表达式，我们能够以编程的方式，构造复杂的文本模式，并对输入的字符串进行搜索。
 *  正则表达式提供了一种完全通用的方式，能够解决各种字符串处理相关的问题：匹配、选择、逻辑和验证
 *
 *  在正则表达式中，用\d表示一位数字。
 *  其他语言中\\表示：我想插入一个普通的反斜线
 *  而java中，\\表示：我要插入一个正则表达式的反斜线，所以其后的字符具有特殊意义。例如你想表示一位数字，name正则表达式应该是\\d，如果想插入一个普通的反斜线，则应该是\\\\。
 *  不过换行符和制表符之类的只需要使用单斜线：\n\t
 *
 *  要表示“一个或多个之前的表达式”，应该使用+。所以，如果要表示“可能有一个负号，后面跟着一位或多位数字”，可以这样：
 *  -?\\d+
 *
 *  例如，你可以检查一个String是否匹配如上所述的正则表达式：
 */
public class IntegerMatch {
  public static void main(String[] args) {
    System.out.println("-1234".matches("-?\\d+"));
    System.out.println("5678".matches("-?\\d+"));
    System.out.println("+911".matches("-?\\d+"));
    System.out.println("+911".matches("(-|\\+)?\\d+"));
  }
} /* Output:
true
true
false
true
*///:~
/**
* @Description: 第三个字符串开头有一个+号，他也是一个合法的整数，但是与对应的正则表达式不匹配。
 * 因此我们的正则表达式应该描述为：可能以+或者-开头。
 * 在正则表达式中，括号有着将表达式分组的效果，而竖直线|表示或操作，也就是：
 * (-|\\+)?
 * 这个正则表达式表示：其实字符可能是-或者+，或者二者都没有(因为后面跟着?修饰符)。因为字符+在正则表达式中有特殊意义，所以需要使用\\进行转义，使之成为一个普通的字符
*/
