package com.wby.thread.manythread.Chaptor17容器深入研究.node14总结;

/**
 * @Auther: LangWeiXian
 * @Date: 2021/7/30 10:58
 * @Description: 可以证明，容器类库对于面向对象语言来说是最重要的类库。大多数编程工作对容器的使用比对其他类库中的构件都要多。某些语言（例如Python）甚至包含内建的基本容器构件 （列表、映射表和集）。
 *
 * 正如你在第11章中所看到的，通过使用容器，无须费力，就可以完成大量非常有趣的操作。但是，在某些时候，你必须更多地了解容器，以便正确地使用它们。
 * 特别是，你必须对散列操作有足够的了解，从而能够编写自己的hashCode（）方法（并且你必须知道何时需要这么做），你还必须对各种不同的容器实现有足够的了解，这样才能够为你的需要进行恰当的选择。
 * 本章覆盖了有关容器类库的这些概念，并讨论了其他有用的细节。至此，你应该已经为在每天的编程任务中使用Java容器做好了充足的准备。
 *
 * 容器类库的设计非常艰难（大多数类库设计问题都是如此）。在C++中，用许多不同的类覆盖了容器类的基础。这与C++容器类之前的可用情况（无任何类可用）相比是一种进步，但是它没有被很好地转译到Java中。
 * 在另一个极端情况中，我看到过容器类库由单一的类构成，即 Container，它同时起到了线性序列和关联数组的作用。
 *
 * Java容器类库在这二者之间达到了一种平衡∶ 具有成熟的容器类库应该具有的完备的功能，但是比C++容器类和其他类似的容器类库易于学习和使用。
 * 这样产生的结果在若干方面看起来都有些奇异，与早期Java类库中所作的某些决策不同，这些奇异性不是偶然的，而是基于复杂性的利弊而仔细权衡的产物。
 *
 * 所选习题的答案都可以在名为The Thinking in Java Annotated Solution Guide的电子文档中找
 * 900
 * 到，读者可以从www.MindView.net购买此文档。
 */
public class Text {
}
